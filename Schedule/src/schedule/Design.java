/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package schedule;

import java.util.*;
import java.io.*;
import java.nio.file.*;
import java.util.ArrayList;
import javax.swing.*;
/**
 *
 * @author tzc6
 */
public final class Design extends javax.swing.JFrame {
    
    /**
     * Creates new form Design
     */
    private static ObjectInputStream inputR;
    private static ObjectInputStream inputC;
    private static ObjectInputStream inputS;
    private static ObjectOutputStream outputR;
    private static ObjectOutputStream outputC;
    private static ObjectOutputStream outputS;
    private static final ArrayList<Room> rooms = new ArrayList<>();       //All rooms in the entire school
    private static final ArrayList<Student> students = new ArrayList<>(); //All students in the entire school
    private static final ArrayList<Course> courses = new ArrayList<>();   //All courses in the entire school
    
    public Design() {
        initComponents();
        jButton1.setEnabled(false);
        jButton2.setEnabled(false);
        jButton3.setEnabled(false);
        jButton8.setEnabled(false);
        jButton9.setEnabled(false);
        jButton10.setEnabled(false);
        jButton11.setEnabled(false);
        jLabel29.setVisible(false);
        checkFiles();
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel8 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jTextField6 = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jButton7 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jScrollPane11 = new javax.swing.JScrollPane();
        jList7 = new javax.swing.JList();
        jButton4 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jSeparator4 = new javax.swing.JSeparator();
        jPanel4 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jLabel15 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList();
        jLabel20 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jList4 = new javax.swing.JList();
        jLabel21 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        jList11 = new javax.swing.JList();
        jPanel9 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        jList5 = new javax.swing.JList();
        jLabel22 = new javax.swing.JLabel();
        jScrollPane12 = new javax.swing.JScrollPane();
        jList12 = new javax.swing.JList();
        jPanel10 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jButton11 = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        jList6 = new javax.swing.JList();
        jScrollPane16 = new javax.swing.JScrollPane();
        jList13 = new javax.swing.JList();
        jPanel12 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane13 = new javax.swing.JScrollPane();
        jList9 = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jList8 = new javax.swing.JList();
        jButton2 = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane15 = new javax.swing.JScrollPane();
        jList10 = new javax.swing.JList();
        jButton3 = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();

        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 237, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 321, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 51, 102));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel2.setText("Add Student");

        jLabel3.setText("First Name:");

        jLabel4.setText("Last Name:");

        jLabel5.setText("Phone Number:");

        jTextField3.setToolTipText("Boo");

        jButton5.setText("Add This Student");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel6.setText("Add Room");

        jLabel7.setText("Room Number:");

        jButton6.setText("Add This Room");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Add This Course");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel8.setText("Select Time:");

        jLabel9.setText("Select Room:");

        jLabel10.setText("Course Name:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel11.setText("Add Course");

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "9am-10am", "10am-11am", "11am-12pm", "12pm-1pm", "1pm-2pm", "2pm-3pm", "3pm-4pm", "4pm-5pm" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jList1);

        jList7.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane11.setViewportView(jList7);

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton4.setText("Save And Close");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton12.setText("Input From Files");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(204, 204, 204));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Monospaced", 2, 11)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(2);
        jTextArea1.setText("'All Students', 'All Courses' and 'All Rooms' must be empty to input from an external file.");
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.setAutoscrolls(false);
        jTextArea1.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        jTextArea1.setEnabled(false);
        jTextArea1.setOpaque(false);
        jTextArea1.setSelectedTextColor(new java.awt.Color(204, 204, 204));
        jScrollPane5.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator4)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                    .addComponent(jButton12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(7, 7, 7)
                                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton6)
                            .addComponent(jButton5)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(10, 10, 10)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jButton7)))
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(108, 108, 108))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6)
                .addGap(3, 3, 3)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jButton12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jList2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(jList2);

        jLabel15.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel15.setText("Add Student to Course");

        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel19.setText("Select Student:");

        jList3.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(jList3);

        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel20.setText("Select Course:");
        jLabel20.setToolTipText("");

        jButton8.setText("Add Student To Course");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton8)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton8)
                .addContainerGap())
        );

        jLabel16.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel16.setText("Display Student's Courses");

        jList4.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane4.setViewportView(jList4);

        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel21.setText("Select Student:");

        jButton9.setText("Display Courses");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jList11.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList11.setEnabled(false);
        jScrollPane10.setViewportView(jList11);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21)
                            .addComponent(jButton9))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                .addGap(11, 11, 11)
                .addComponent(jButton9)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel17.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel17.setText("Display Room's Courses");

        jButton10.setText("Display Courses");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jList5.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane7.setViewportView(jList5);

        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel22.setText("Select Room:");

        jList12.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList12.setEnabled(false);
        jScrollPane12.setViewportView(jList12);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22)
                            .addComponent(jButton10))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel10.setPreferredSize(new java.awt.Dimension(200, 247));

        jLabel18.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel18.setText("Display Courses at a Time");

        jButton11.setText("Display Courses");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel23.setText("Select Time:");

        jList6.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "9am-10am", "10am-11am", "11am-12pm", "12pm-1pm", "1pm-2pm", "2pm-3pm", "3pm-4pm", "4pm-5pm" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jList6.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane9.setViewportView(jList6);

        jList13.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList13.setEnabled(false);
        jScrollPane16.setViewportView(jList13);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane9)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23)
                            .addComponent(jButton11))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel13.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel13.setText("All Courses");

        jList9.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane13.setViewportView(jList9);

        jButton1.setText("Delete Course");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel24.setText("(Select One To Delete)");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1)
                            .addComponent(jLabel24))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel14.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel14.setText("All Students");

        jList8.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane8.setViewportView(jList8);

        jButton2.setText("Delete Student");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel25.setText("(Select One To Delete)");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25))
                        .addGap(0, 26, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap())
        );

        jLabel12.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel12.setText("All Rooms");

        jList10.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane15.setViewportView(jList10);

        jButton3.setText("Delete Room");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel26.setText("(Select One To Delete)");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel26))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 248, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(0, 0, 0))
        );

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel28.setText("School Day Schedule");

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel29.setText("School Day Schedule");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel28, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
//Add Room
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        
    //Add room
        
    int number = 0;
    try {
        number = Integer.parseInt(jTextField6.getText());
        }
    catch(Exception e){
        JOptionPane.showMessageDialog(null, "This is an invaid room number. Please try again.", "Add Room", JOptionPane.ERROR_MESSAGE);
        jTextField6.setText(null);
        return;
        }
    
    if(number < 0)
        JOptionPane.showMessageDialog(null, "The room must be positive.", "Add Room", JOptionPane.ERROR_MESSAGE);

    else{
        if(School1.addRoom(number, rooms) == true) {
            JOptionPane.showMessageDialog(null, "This room is already in the system.", "Add Room", JOptionPane.ERROR_MESSAGE);
            }

        else{
            Vector<Integer> s = new Vector<>();

            for(Room a : rooms) {
                s.add(a.getNumber());
                }
            jButton3.setEnabled(true);
            jButton10.setEnabled(true);
            jButton12.setEnabled(false);
            jList10.setListData(s);
            jList7.setListData(s);
            jList5.setListData(s);
            Design.this.setSize(1062, 665);
            jLabel28.setVisible(false);
            jLabel29.setVisible(true);
            }
        }
    jTextField6.setText(null);
    }//GEN-LAST:event_jButton6ActionPerformed
    
//Add Course
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        
    //Add Course

    String time = null;
    if(jList1.getSelectedIndex() == 0){
        time = "9am-10am";
        }

    if(jList1.getSelectedIndex() == 1){
        time = "10am-11am";
        }

    if(jList1.getSelectedIndex() == 2){
        time = "11am-12pm";
        }

    if(jList1.getSelectedIndex() == 3){
        time = "12pm-1pm";
        }

    if(jList1.getSelectedIndex() == 4){
        time = "1pm-2pm";
        }

    if(jList1.getSelectedIndex() == 5){
        time = "2pm-3pm";
        }

    if(jList1.getSelectedIndex() == 6){
        time = "3pm-4pm";
        }

    if(jList1.getSelectedIndex() == 7){
        time = "4pm-5pm";
        }

    if(jList1.getSelectedIndex()== -1){
        JOptionPane.showMessageDialog(null, "There must be a time selected.", "Add Course", JOptionPane.ERROR_MESSAGE);
        jTextField7.setText(null);
        }
    for(Course b : courses){
        if(b.getTime().equalsIgnoreCase(time) && b.getRoom() == rooms.get(jList7.getSelectedIndex()).getNumber()){
            JOptionPane.showMessageDialog(null, "There is already a course in this room at this time.", "Add Course", JOptionPane.ERROR_MESSAGE);
            jTextField7.setText(null);
            return;
            }
        }
    
    if(jTextField7.getText().equalsIgnoreCase("")){
        JOptionPane.showMessageDialog(null, "You must type a name for the course.", "Add Course", JOptionPane.ERROR_MESSAGE);
        return;
        }
    
    else{
        int room = rooms.get(jList7.getSelectedIndex()).getNumber();

        if(room == -1){
            JOptionPane.showMessageDialog(null, "There must be a room selected.", "Add Course", JOptionPane.ERROR_MESSAGE);
            jTextField7.setText(null);
            return;
            }
        
        if(School1.addCourse(jTextField7.getText(), room, time, rooms, courses) == false){
            JOptionPane.showMessageDialog(null, "This course is already in the system.", "Add Course", JOptionPane.ERROR_MESSAGE);
            jTextField7.setText(null);
            return;
            }
        
        else{
            Vector<String> s = new Vector();
            for(Course a : courses){
                s.add(a.getName() + " [Room: " + a.getRoom() + " @ " + a.getTime() + "]");
                }
            
            jButton1.setEnabled(true);
            jButton10.setEnabled(true);
            jButton11.setEnabled(true);
            jButton12.setEnabled(false);

            if(students.isEmpty() == false){
                jButton8.setEnabled(true);
                }

            jList9.setListData(s);
            jList3.setListData(s);
            Design.this.setSize(1062, 665);
            jLabel28.setVisible(false);
            jLabel29.setVisible(true);
            rewriteTextAreas();
            }
        }
        jTextField7.setText(null);
    }//GEN-LAST:event_jButton7ActionPerformed

//Add Student
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        
    //Add Student

    if(jTextField1.getText().equalsIgnoreCase("") == true){
        JOptionPane.showMessageDialog(null, "You must input a first name.", "Add Student", JOptionPane.ERROR_MESSAGE);
        jTextField1.setText(null);
        jTextField2.setText(null);
        jTextField3.setText(null);
        return;
        }
    
    if(jTextField2.getText().equalsIgnoreCase("") == true){
        JOptionPane.showMessageDialog(null, "You must input a last name.", "Add Student", JOptionPane.ERROR_MESSAGE);
        jTextField1.setText(null);
        jTextField2.setText(null);
        jTextField3.setText(null);
        return;
        }
    
    if(jTextField3.getText().equalsIgnoreCase("")){
        JOptionPane.showMessageDialog(null, "You must input a phone number.", "Add Student", JOptionPane.ERROR_MESSAGE);
        jTextField1.setText(null);
        jTextField2.setText(null);
        jTextField3.setText(null);
        }
    
    else{
        long number = 0;
        try {
            number = Long.parseLong(jTextField3.getText());
            }
        catch(Exception e){
            jTextField1.setText(null);
            jTextField2.setText(null);
            jTextField3.setText(null);
            JOptionPane.showMessageDialog(null, "The student is already in the system.", "Add Student", JOptionPane.ERROR_MESSAGE);
            return;
            }
        
        String first = jTextField1.getText();
        String last = jTextField2.getText();
        for(Student a : students){
            if(a.getFirst().equalsIgnoreCase(first) && a.getLast().equalsIgnoreCase(last) && a.getNumber() == number){
                JOptionPane.showMessageDialog(null, "The student is already in the system.", "Add Student", JOptionPane.ERROR_MESSAGE);
                jTextField1.setText(null);
                jTextField2.setText(null);
                jTextField3.setText(null);
                return;
                }
            }
        String sNumber = Long.toString(number);    //converts long to string so length can be verified as 10
        if(sNumber.length() < 10 || sNumber.length() > 10){
            JOptionPane.showMessageDialog(null, "The phone number must be 10 digits long.", "Add Student", JOptionPane.ERROR_MESSAGE);
            }

        else{
            long one = (number / 1000000000) % 10; //gets all seperate numbers of phone
            long two = (number / 100000000) % 10; //gets all seperate numbers of phone
            long three = (number / 10000000) % 10; //gets all seperate numbers of phone
            long four = (number / 1000000) % 10;
            long five = (number / 100000) % 10;
            long six = (number / 10000) % 10;
            long seven = (number / 1000) % 10;
            long eight = (number / 100) % 10;
            long nine = (number / 10) % 10;
            long ten = number % 10;
            boolean check = false;

            if(one < 2 || four < 2){
                check = true;
                }
            if(five == 1 && six == 1){
                check = true;
                }
            if(one == 9 && two == 1 && three == 9){
                check = true;
                }
            if(four == 5 && five == 5 && six == 5){
                long total = (seven * 1000) + (eight * 100) + (nine * 10) + (ten);
                if(total >= 100 && total <=199){
                    check = true;
                    }
                }

            if(check == true){
                JOptionPane.showMessageDialog(null, "This phone number is invalid.", "Add Student", JOptionPane.ERROR_MESSAGE);
                jTextField1.setText(null);
                jTextField2.setText(null);
                jTextField3.setText(null);
                return;
                }

            else{
                Vector<String> s = new Vector<>();
                students.add(new Student(number, first, last));

                for(Student a : students){
                    s.add(a.getFirst() + " " + a.getLast() + " " + a.getNumber());
                    }
                jButton2.setEnabled(true);
                jButton9.setEnabled(true);
                jButton12.setEnabled(false);

                if(courses.isEmpty() == false){
                    jButton8.setEnabled(true);
                    }

                jList8.setListData(s);
                jList2.setListData(s);
                jList4.setListData(s);
                jLabel28.setVisible(false);
                jLabel29.setVisible(true);
                Design.this.setSize(1062, 665);
                }
            }
        jTextField1.setText(null);
        jTextField2.setText(null);
        jTextField3.setText(null);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    

//----------------Saving and Reading Files-----------------------------------------------------
//Save to External Files
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        //Save To External Files
        
        outOpenFiles();
        saveFiles();
        outCloseFiles(); 
    }//GEN-LAST:event_jButton4ActionPerformed

//Choice To Upload From File
    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        
        //Choice To Upload From File
        
        boolean check = inOpenFiles();
        if(check == false){
            return;
            }
        readFiles();
        inCloseFiles();
        
        if(rooms.isEmpty() == true && courses.isEmpty() == true && students.isEmpty() == true){
            Design.this.setSize(235, 665);
            JOptionPane.showMessageDialog(null, "Input sucessfull. There was no data to input.", "Importing", WIDTH);
            }
        
        else{
            JOptionPane.showMessageDialog(null, "Input sucessfull. The existing data is now available.", "Importing", WIDTH);
            Vector<Integer> r = new Vector<>();
            Vector<String> c = new Vector<>();
            Vector<String> s = new Vector<>();

            //Rooms
            for(Room a : rooms){
                r.add(a.getNumber());
                }

            if(courses.isEmpty() == false){
                jButton1.setEnabled(true);
                }

            if(rooms.isEmpty() == false){
                jButton3.setEnabled(true);
                jButton10.setEnabled(true);
                }

            jList10.setListData(r);
            jList7.setListData(r);
            jList5.setListData(r);

            //Courses


            jList9.setListData(c);
            jList3.setListData(c);

            //Students
            for(Student a : students){
                s.add(a.getFirst() + " " + a.getLast() + " " + a.getNumber());
                }

            if(students.isEmpty() == false){
                jButton9.setEnabled(true);
                jButton2.setEnabled(true);
                }

            if(courses.isEmpty() == false && students.isEmpty() == false){
                jButton8.setEnabled(true);
                }

            jList8.setListData(s);
            jList2.setListData(s);
            jList4.setListData(s);
            
            jLabel29.setVisible(true);
            jLabel28.setVisible(false);
            Design.this.setSize(1062, 665);
            }
        jButton12.setEnabled(false);
    }//GEN-LAST:event_jButton12ActionPerformed

    public void rewriteTextAreas(){
        //rewrites courses in room if showing
        int choice = jList5.getSelectedIndex();
        if(choice == -1);
        else{
            Vector<String> f = new Vector();
            for(Course a : rooms.get(choice).theseCourses){
                f.add(a.getName() + " [Room: " + a.getRoom() + " @ " + a.getTime() + "]");
                }
            jList12.setListData(f);
            }
        
        //reqrites courses at time if showing
        int timeS = jList6.getSelectedIndex();
        if(timeS == -1);

        else{
            String time = null;
            if(timeS == 0){
                time = "9am-10am";
                }

            if(timeS == 1){
                time = "10am-11am";
                }

            if(timeS == 2){
                time = "11am-12pm";
                }

            if(timeS == 3){
                time = "12pm-1pm";
                }

            if(timeS == 4){
                time = "1pm-2pm";
                }

            if(timeS == 5){
                time = "2pm-3pm";
                }

            if(timeS == 6){
                time = "3pm-4pm";
                }

            if(timeS == 7){
                time = "4pm-5pm";
                }

            Vector<String> b = new Vector();
            for(Course a : courses){
                if(a.getTime().equalsIgnoreCase(time)){
                    b.add(a.getName() + " [Room: " + a.getRoom() + " @ " + a.getTime() + "]");
                    }
                }
            jList13.setListData(b);
            }

        //rewrites courses of student if showing
        int student = jList4.getSelectedIndex();

        if(student == -1){
            }

        else{
            Vector<String> k = new Vector();
            for(Course a : courses){
                if(a.checkStudent(students.get(student)) == true){
                    k.add(a.getName() + " [Room: " + a.getRoom() + " @ " + a.getTime() + "]"); 
                    }
                }
            jList11.setListData(k);
            }
        }
    
    public static void outOpenFiles(){
        try {
            outputR = new ObjectOutputStream(Files.newOutputStream(Paths.get("rooms.ser")));
            outputC = new ObjectOutputStream(Files.newOutputStream(Paths.get("courses.ser")));
            outputS = new ObjectOutputStream(Files.newOutputStream(Paths.get("students.ser")));
            }
        catch(IOException io){
            JOptionPane.showMessageDialog(null, "Error opening files. Terminating.", "Opening Output Files", JOptionPane.ERROR_MESSAGE);
            System.exit(1);
            }
        }
    
    public static void saveFiles(){
        for(Room r : rooms){
            try {
            outputR.writeObject(r);
                }
            catch(IOException io){
                JOptionPane.showMessageDialog(null, "Error writing to file. Terminating.", "Writing to Output Files", JOptionPane.ERROR_MESSAGE);
                System.exit(1);
                }
            }


        for(Course c : courses){
            try {
            outputC.writeObject(c);
                }
            catch(IOException io){
                JOptionPane.showMessageDialog(null, "Error writing to file. Terminating.", "Writing to Output Files", JOptionPane.ERROR_MESSAGE);
                System.exit(1);
                }
            }


        for(Student s : students){
            try {
            outputS.writeObject(s);
                }
            catch(IOException io){
                JOptionPane.showMessageDialog(null, "Error writing to file. Terminating.", "Writing to Output Files", JOptionPane.ERROR_MESSAGE);
                System.exit(1);
                }
            }
        }
        
    public static void outCloseFiles(){
        try {
            if(outputR != null)
                outputR.close();
            
            if(outputC != null)
                outputC.close();
            
            if(outputS != null)
                outputS.close();
            }
        catch(IOException io){
            JOptionPane.showMessageDialog(null, "Error closing files. Terminating.", "Closing Output Files", JOptionPane.ERROR_MESSAGE);
            System.exit(1);
            }
        System.exit(0);
        }
    
    public static boolean inOpenFiles(){
        try {
            inputR = new ObjectInputStream(Files.newInputStream(Paths.get("rooms.ser")));
            inputC = new ObjectInputStream(Files.newInputStream(Paths.get("courses.ser")));
            inputS = new ObjectInputStream(Files.newInputStream(Paths.get("students.ser")));
            }
        catch(IOException io){
            JOptionPane.showMessageDialog(null, "Files Do Not Exist. Click 'Save And Close' to Create Them, then Excecute Program Again to Carry on With Tasks/Usage.", "Opening Input Files", JOptionPane.ERROR_MESSAGE);
            return false;
            }
        return true;
        }
    
    public void checkFiles(){
        try {
            inputR = new ObjectInputStream(Files.newInputStream(Paths.get("rooms.ser")));
            inputC = new ObjectInputStream(Files.newInputStream(Paths.get("courses.ser")));
            inputS = new ObjectInputStream(Files.newInputStream(Paths.get("students.ser")));
            }
        catch(IOException io){
            JOptionPane.showMessageDialog(null, "Files (rooms.ser), (courses.ser) and (students.ser) do not exist. Select 'Save And Close' to create them when you are finished.", "Checking Files", WIDTH);
            inCloseFiles();
            return;
            }
        JOptionPane.showMessageDialog(null, "Files (rooms.ser), (courses.ser) and (students.ser) exist and can be input to the program.", "Checking Files", WIDTH);
        inCloseFiles();
        }
    
    public static void readFiles() {
        try {
            while(true){
                Room inR = (Room) inputR.readObject();
                rooms.add(inR);
                }
            }
        catch(EOFException eof){
            }
        catch(ClassNotFoundException cnfe){
            JOptionPane.showMessageDialog(null, "Invalid Object Type. Terminating.", "Reading Input File", JOptionPane.ERROR_MESSAGE);
            System.exit(1);
            }
        catch(IOException io){
            JOptionPane.showMessageDialog(null, "Error reading from file. Terminating.", "Reading Input File", JOptionPane.ERROR_MESSAGE);
            System.exit(1);
            }
        
        
        try {
            while(true){
                Course inC = (Course) inputC.readObject();
                courses.add(inC);
                }
            }
        catch(EOFException eof){
            }
        catch(ClassNotFoundException cnfe){
            JOptionPane.showMessageDialog(null, "Invalid Object Type. Terminating.", "Reading Input File", JOptionPane.ERROR_MESSAGE);
            System.exit(1);
            }
        catch(IOException io){
            JOptionPane.showMessageDialog(null, "Error reading from file. Terminating.", "Reading Input File", JOptionPane.ERROR_MESSAGE);
            System.exit(1);
            }
        
        
        try {
            while(true){
                Student inS = (Student) inputS.readObject();
                students.add(inS);
                }
            }
        catch(EOFException eof){
            }
        catch(ClassNotFoundException cnfe){
            JOptionPane.showMessageDialog(null, "Invalid Object Type. Terminating.", "Reading Input File", JOptionPane.ERROR_MESSAGE);
            System.exit(1);
            }
        catch(IOException io){
            JOptionPane.showMessageDialog(null, "Error reading from file. Terminating.", "Reading Input File", JOptionPane.ERROR_MESSAGE);
            System.exit(1);
            }
        }
    
    public static void inCloseFiles(){
        try {
            if(inputR != null)
                inputR.close();

            if(inputC != null)
                inputC.close();

            if(inputS != null)
                inputS.close();
            }
        catch(IOException io){
            JOptionPane.showMessageDialog(null, "Error closing files. Terminating.", "Closing Input File", JOptionPane.ERROR_MESSAGE);
            System.exit(1);
            }
        }
//---------------------------------------------------------------------------------------------
     
    
    
//Delete Room
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        //Delete Rooms

        int selection = jList10.getSelectedIndex();

        if(rooms.get(selection).theseCourses.isEmpty() == false){
            JOptionPane.showMessageDialog(null, "This rooms has courses scheduled in it. Delete courses in this room first(Refer to 'Display Room's Courses').", "Delete Room", JOptionPane.ERROR_MESSAGE);
            }

        else{
            rooms.remove(selection);

            Vector<Integer> s = new Vector();

            for(Room a : rooms) {
                s.add(a.getNumber());
            }

            jList10.setListData(s);
            jList7.setListData(s);
            jList5.setListData(s);

            jTextField6.setText(null);

            if(rooms.isEmpty() == true){
                jButton3.setEnabled(false);
                jButton10.setEnabled(false);
                }

            if(rooms.isEmpty() == true && students.isEmpty() == true && courses.isEmpty() == true){
                jButton12.setEnabled(true);
                jLabel29.setVisible(false);
                jLabel28.setVisible(true);
                Design.this.setSize(235, 665);
                }
            }
    }//GEN-LAST:event_jButton3ActionPerformed

//Delete Student
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        //Delete Students

        int selection = jList8.getSelectedIndex();

        for(Course a : courses){
            if(a.checkStudent(students.get(selection)) == true){
                a.removeStudent(students.get(selection));
                }
            }

        students.remove(selection);

        Vector<String> s = new Vector();

        for(Student a : students){
            s.add(a.getFirst() + " " + a.getLast() + " " + a.getNumber());
            }
        
        jList8.setListData(s);
        jList2.setListData(s);
        jList4.setListData(s);

        jTextField1.setText(null);
        jTextField2.setText(null);
        jTextField3.setText(null);

        if(students.isEmpty() == true){
            jButton2.setEnabled(false);
            jButton8.setEnabled(false);
            jButton9.setEnabled(false);
            s.removeAllElements();
            jList11.setListData(s);
            }

        if(rooms.isEmpty() == true && students.isEmpty() == true && courses.isEmpty() == true){
            jButton12.setEnabled(true);
            jLabel29.setVisible(false);
            jLabel28.setVisible(true);
            Design.this.setSize(235, 665);
            }
    }//GEN-LAST:event_jButton2ActionPerformed

//Delete Course
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        //Delete Course

        int selection = jList9.getSelectedIndex();

        for(Room a : rooms){
            if(a.checkCourse(courses.get(selection))){
                a.removeCourse(courses.get(selection));
                }
            }

        courses.remove(selection);

        Vector<String> s = new Vector();

        for(Course a : courses){
            s.add(a.getName() + " [Room: " + a.getRoom() + " @ " + a.getTime() + "]");
            }

        jList9.setListData(s);
        jList3.setListData(s);

        jTextField7.setText(null);

        if(courses.isEmpty() == true){
            jButton1.setEnabled(false);
            jButton8.setEnabled(false);
            jButton9.setEnabled(false);
            jButton10.setEnabled(false);
            jButton11.setEnabled(false);
            s.removeAllElements();
            jList11.setListData(s);
            jList12.setListData(s);
            jList13.setListData(s);
            }

        if(rooms.isEmpty() == true && students.isEmpty() == true && courses.isEmpty() == true){
            jButton12.setEnabled(true);
            jLabel29.setVisible(false);
            jLabel28.setVisible(true);
            Design.this.setSize(235, 665);
            }

        rewriteTextAreas();
    }//GEN-LAST:event_jButton1ActionPerformed

//Display Courses at Time
    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed

        //Display Courses at Time

        int selection = jList6.getSelectedIndex();

        if(selection == -1){
            JOptionPane.showMessageDialog(null, "You must select a time.", "Display Courses at a Time", JOptionPane.ERROR_MESSAGE);
            return;
            }

        else{
            String time = null;
            if(selection == 0){
                time = "9am-10am";
                }

            if(selection == 1){
                time = "10am-11am";
                }

            if(selection == 2){
                time = "11am-12pm";
                }

            if(selection == 3){
                time = "12pm-1pm";
                }

            if(selection == 4){
                time = "1pm-2pm";
                }

            if(selection == 5){
                time = "2pm-3pm";
                }

            if(selection == 6){
                time = "3pm-4pm";
                }

            if(selection == 7){
                time = "4pm-5pm";
                }

            Vector<String> s = new Vector();
            for(Course a : courses){
                if(a.getTime().equalsIgnoreCase(time)){
                    s.add(a.getName() + " [Room: " + a.getRoom() + "]");
                    }
                }
            jList13.setListData(s);
            }
    }//GEN-LAST:event_jButton11ActionPerformed

//Display Room Courses
    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed

        //Display Room Courses

        int selection = jList5.getSelectedIndex();

        if(selection == -1){
            JOptionPane.showMessageDialog(null, "You must select a room.", "Display Room's Courses", JOptionPane.ERROR_MESSAGE);
            return;
            }

        else{
            Vector<String> s = new Vector();
            for(Course a : rooms.get(selection).theseCourses){
                s.add(a.getName() + " [@ " + a.getTime() + "]");
                }
            
            jList12.setListData(s);
            }
    }//GEN-LAST:event_jButton10ActionPerformed

//Display Student Courses
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed

        //Display Student Courses

        int selection = jList4.getSelectedIndex();

        if(selection == -1){
            JOptionPane.showMessageDialog(null, "You must select a student.", "Display Student's Courses", JOptionPane.ERROR_MESSAGE);
            return;
            }

        else{
            Vector<String> s = new Vector();
            for(Course a : courses){
                if(a.checkStudent(students.get(selection)) == true){
                    s.add(a.getName() + " [Room: " + a.getRoom() + " @ " + a.getTime() + "]");
                    }
                }
            jList11.setListData(s);
            }
    }//GEN-LAST:event_jButton9ActionPerformed

//Add Student to Course
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed

        //Add Student to Course

        int student = jList2.getSelectedIndex();
        int course = jList3.getSelectedIndex();

        if(student == -1 && course == -1){
            JOptionPane.showMessageDialog(null, "You must select a student and a course.", "Add Student To Course", JOptionPane.ERROR_MESSAGE);
            return;
            }

        if(student == -1){
            JOptionPane.showMessageDialog(null, "You must select a student.", "Add Student To Course", JOptionPane.ERROR_MESSAGE);
            return;
            }

        if(course == -1){
            JOptionPane.showMessageDialog(null, "You must select a course.", "Add Student To Course", JOptionPane.ERROR_MESSAGE);
            return;
            }

        if(courses.get(course).checkStudent(students.get(student)) == true){
            JOptionPane.showMessageDialog(null, "This student already belongs to this course.", "Add Student To Course", JOptionPane.ERROR_MESSAGE);
            }

        else{
            for(Course a : courses){
                if(a.checkStudent(students.get(student)) == true){
                    if(courses.get(course).getTime().equalsIgnoreCase(a.getTime())){
                        JOptionPane.showMessageDialog(null, "This student already has a course at this time.", "Add Student To Course", JOptionPane.ERROR_MESSAGE);
                        return;
                        }
                    }
                }   
            courses.get(course).addStudent(students.get(student));
            JOptionPane.showMessageDialog(null, "This student has been added to this course.", "Add Student To Course", WIDTH);
            rewriteTextAreas();
            }

    }//GEN-LAST:event_jButton8ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        Design Frame = new Design();
        Frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);   //Exits With Red X
        Frame.setSize(235, 665);
        Frame.setVisible(true);     //Frame is Visible
        }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jList1;
    private javax.swing.JList jList10;
    private javax.swing.JList jList11;
    private javax.swing.JList jList12;
    private javax.swing.JList jList13;
    private javax.swing.JList jList2;
    private javax.swing.JList jList3;
    private javax.swing.JList jList4;
    private javax.swing.JList jList5;
    private javax.swing.JList jList6;
    private javax.swing.JList jList7;
    private javax.swing.JList jList8;
    private javax.swing.JList jList9;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    // End of variables declaration//GEN-END:variables
}
